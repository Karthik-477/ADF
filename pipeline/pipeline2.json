{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"value": "@json(pipeline().parameters.JsonMappingNlob)",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DelimitedText1_copy1",
									"type": "DatasetReference",
									"parameters": {
										"FolderaName": {
											"value": "@pipeline().parameters.SourceTarget",
											"type": "Expression"
										},
										"FileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTable2",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@pipeline().parameters.ServerName",
											"type": "Expression"
										},
										"DbName": {
											"value": "@pipeline().parameters.DbName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.TableName",
											"type": "Expression"
										},
										"TableSchema": {
											"value": "@pipeline().parameters.DbSchema",
											"type": "Expression"
										},
										"LoginID": {
											"value": "@pipeline().parameters.LoginID",
											"type": "Expression"
										},
										"Password": {
											"value": "@pipeline().parameters.Password",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Lookup2",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "insert into control_file_load (source_type,file_name,\ncopy_status,\nlast_process_date,\nfile_path)\nvalues\n(\n'Database',\n'@{pipeline().parameters.TableName}',\n'Pass',\ngetdate(),\n'@{pipeline().parameters.SourceTarget}'\n)\n; Select 1 as id",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "control_file_load"
									}
								}
							}
						},
						{
							"name": "Lookup3",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "insert into control_file_load (source_type,file_name,\ncopy_status,\nlast_process_date,\nfile_path)\nvalues\n(\n'Database',\n'@{pipeline().parameters.TableName}',\n'Fail',\ngetdate(),\n'@{pipeline().parameters.SourceTarget}'\n)\n; Select 1 as id",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "control_file_load"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference",
						"parameters": {
							"FolderaName": {
								"value": "@pipeline().parameters.SourceTarget",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			}
		],
		"parameters": {
			"SourceTarget": {
				"type": "string"
			},
			"ServerName": {
				"type": "string"
			},
			"DbName": {
				"type": "string"
			},
			"TableName": {
				"type": "string"
			},
			"DbSchema": {
				"type": "string"
			},
			"LoginID": {
				"type": "string"
			},
			"Password": {
				"type": "string"
			},
			"JsonMappingNlob": {
				"type": "string"
			}
		},
		"annotations": []
	}
}